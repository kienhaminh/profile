openapi: 3.0.3
info:
  title: Metadata API
  description: API for managing metadata entities (hashtags, topics, technologies)
  version: 1.0.0

servers:
  - url: /api
    description: API base path

paths:
  # Hashtags
  /hashtags:
    get:
      summary: List hashtags
      description: Get all hashtags
      operationId: listHashtags
      tags:
        - Hashtag
      responses:
        "200":
          description: List of hashtags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hashtag"

    post:
      summary: Create hashtag
      description: Create a new hashtag (super admin only)
      operationId: createHashtag
      tags:
        - Hashtag
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHashtagRequest"
      responses:
        "201":
          description: Hashtag created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hashtag"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "409":
          description: Name or slug already exists

  /hashtags/{id}:
    put:
      summary: Update hashtag
      description: Update an existing hashtag (super admin only)
      operationId: updateHashtag
      tags:
        - Hashtag
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHashtagRequest"
      responses:
        "200":
          description: Hashtag updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hashtag"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Hashtag not found
        "409":
          description: Name or slug already exists

    delete:
      summary: Delete hashtag
      description: Delete a hashtag (cascade removes associations) (super admin only)
      operationId: deleteHashtag
      tags:
        - Hashtag
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Hashtag deleted
        "401":
          description: Unauthorized
        "404":
          description: Hashtag not found

  # Topics
  /topics:
    get:
      summary: List topics
      description: Get all topics
      operationId: listTopics
      tags:
        - Topic
      responses:
        "200":
          description: List of topics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Topic"

    post:
      summary: Create topic
      description: Create a new topic (super admin only)
      operationId: createTopic
      tags:
        - Topic
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTopicRequest"
      responses:
        "201":
          description: Topic created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "409":
          description: Name or slug already exists

  /topics/{id}:
    put:
      summary: Update topic
      description: Update an existing topic (super admin only)
      operationId: updateTopic
      tags:
        - Topic
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTopicRequest"
      responses:
        "200":
          description: Topic updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Topic not found
        "409":
          description: Name or slug already exists

    delete:
      summary: Delete topic
      description: Delete a topic (cascade removes associations) (super admin only)
      operationId: deleteTopic
      tags:
        - Topic
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Topic deleted
        "401":
          description: Unauthorized
        "404":
          description: Topic not found

  # Technologies
  /technologies:
    get:
      summary: List technologies
      description: Get all technologies
      operationId: listTechnologies
      tags:
        - Technology
      responses:
        "200":
          description: List of technologies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Technology"

    post:
      summary: Create technology
      description: Create a new technology (super admin only)
      operationId: createTechnology
      tags:
        - Technology
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTechnologyRequest"
      responses:
        "201":
          description: Technology created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Technology"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "409":
          description: Name or slug already exists

  /technologies/{id}:
    put:
      summary: Update technology
      description: Update an existing technology (super admin only)
      operationId: updateTechnology
      tags:
        - Technology
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTechnologyRequest"
      responses:
        "200":
          description: Technology updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Technology"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Technology not found
        "409":
          description: Name or slug already exists

    delete:
      summary: Delete technology
      description: Delete a technology (cascade removes associations) (super admin only)
      operationId: deleteTechnology
      tags:
        - Technology
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Technology deleted
        "401":
          description: Unauthorized
        "404":
          description: Technology not found

components:
  schemas:
    Hashtag:
      type: object
      required:
        - id
        - name
        - slug
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200
          nullable: true
        createdAt:
          type: string
          format: date-time

    Topic:
      type: object
      required:
        - id
        - name
        - slug
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200
          nullable: true

    Technology:
      type: object
      required:
        - id
        - name
        - slug
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200
          nullable: true
        createdAt:
          type: string
          format: date-time

    CreateHashtagRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

    UpdateHashtagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

    CreateTopicRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

    UpdateTopicRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

    CreateTechnologyRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

    UpdateTechnologyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        slug:
          type: string
          pattern: "^[a-z0-9-]+$"
        description:
          type: string
          maxLength: 200

  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: session
