openapi: 3.0.3
info:
  title: Portfolio Blog API (MVP)
  version: 0.1.0
paths:
  /api/admin/login:
    post:
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: Authenticated
        '401':
          description: Unauthorized
  /api/admin/posts:
    get:
      summary: List posts (admin)
      responses:
        '200':
          description: OK
    post:
      summary: Create post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Created
  /api/admin/posts/{slug}:
    patch:
      summary: Update post
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete post
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
  /api/blog/posts:
    get:
      summary: Public list posts
      parameters:
        - in: query
          name: topic
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/blog/posts/{slug}:
    get:
      summary: Public get post
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    PostInput:
      type: object
      properties:
        title:
          type: string
        slug:
          type: string
        content:
          type: string
        excerpt:
          type: string
        topics:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [draft, published]
        publishDate:
          type: string
          format: date-time
        coverImage:
          type: string
      required: [title, slug, content, status]
    PostUpdate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        excerpt:
          type: string
        topics:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [draft, published]
        publishDate:
          type: string
          format: date-time
        coverImage:
          type: string
